# Generated by Django 3.1.3 on 2021-07-06 07:22

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ChoiceQues_StudentAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ChoiceAns', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D')], default='A', max_length=20, verbose_name='Choice Ans')),
            ],
        ),
        migrations.CreateModel(
            name='ChoiceQues_StudentAnswer_Admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ChoiceQuestions',
            fields=[
                ('QuestionID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('QuestionContent', models.CharField(default='', max_length=20, verbose_name='Question Content')),
                ('ChoiceAnswer', models.CharField(default='', max_length=4, verbose_name='Correct Answer')),
                ('QuestionMark', models.IntegerField(verbose_name='Question Mark')),
            ],
        ),
        migrations.CreateModel(
            name='ChoiceQuestions_Admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Choices_Admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CourseID', models.CharField(default='', max_length=20, verbose_name='Course ID')),
                ('CousrseName', models.CharField(default='', max_length=100, verbose_name='Course Name')),
                ('CourseTimeStart', models.DateTimeField(verbose_name='Start Date')),
                ('CourseTimeEnd', models.DateTimeField(verbose_name='End Date')),
                ('CourseDescription', models.TextField(verbose_name='Course Description')),
            ],
        ),
        migrations.CreateModel(
            name='Course_Admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='CourseTaken_Admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FillQues_StudentAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FillAns', models.TextField(verbose_name='Fill Question')),
            ],
        ),
        migrations.CreateModel(
            name='FillQues_StudentAnswer_Admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FillQuestions',
            fields=[
                ('QuestionID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('QuestionContent', models.CharField(default='', max_length=20, verbose_name='Question Content')),
                ('QuestionAnswer', models.CharField(default='', max_length=20, verbose_name='Question Answer')),
                ('QuestionMark', models.IntegerField(verbose_name='Mark')),
                ('FillExplanation', models.TextField(default='Explanation is ...', verbose_name='Fill Explanation')),
            ],
        ),
        migrations.CreateModel(
            name='FillQuestions_Admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Grades_Admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identification', models.CharField(choices=[('STU', 'Student'), ('STA', 'Staff'), ('TEA', 'Teacher')], default='Student', max_length=20, verbose_name='Identification')),
                ('idcode', models.CharField(default='', max_length=20, verbose_name='ID Code')),
                ('StudentBaseInfo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Student Name')),
            ],
        ),
        migrations.CreateModel(
            name='Student_Admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='StudentAnswers_Admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SubjectID', models.CharField(default='', max_length=20, verbose_name='Subject ID')),
                ('SubjectName', models.CharField(default='', max_length=100, verbose_name='Subject Name')),
                ('SubjectDescription', models.TextField(default='', verbose_name='Subject Description')),
            ],
        ),
        migrations.CreateModel(
            name='Subject_Admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Teacher_Admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='TestContent_Admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='TestInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TestID', models.CharField(default='', max_length=20, verbose_name='Test ID')),
                ('TestName', models.TextField(blank=True, default=None, null=True, verbose_name='Test Name')),
                ('TestTimeStart', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Start Time')),
                ('TestTimeEnd', models.DateTimeField(blank=True, default=None, null=True, verbose_name='End Time')),
                ('TestCourse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testmodule.course', verbose_name='Test Course')),
                ('TestSubject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testmodule.subject', verbose_name='Subject Course')),
            ],
        ),
        migrations.CreateModel(
            name='TestInfo_Admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='TextQues_StudentAnswer_Admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='TextQuestions',
            fields=[
                ('QuestionID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('QuestionContent', models.CharField(default='', max_length=20, verbose_name='Question Content')),
                ('QuestionAnswer', models.CharField(default='', max_length=20, verbose_name='Question Answer')),
                ('QuestionMark', models.IntegerField(verbose_name='Mark')),
                ('QuestionExplanation', models.TextField(default='Explanation is ...', verbose_name='Text Explanation')),
            ],
        ),
        migrations.CreateModel(
            name='TextQuestions_Admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='TextQues_StudentAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TextAns', models.TextField(verbose_name=' Text Question')),
                ('TestID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testmodule.testinfo', verbose_name='Test ID')),
                ('TextQues', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='testmodule.textquestions', verbose_name=' Text Question')),
            ],
        ),
        migrations.CreateModel(
            name='TestContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TestChoiceQues', models.ManyToManyField(to='testmodule.ChoiceQuestions', verbose_name='Choice Question')),
                ('TestFillQues', models.ManyToManyField(to='testmodule.FillQuestions', verbose_name='Fill Question')),
                ('TestID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testmodule.testinfo', verbose_name='Test ID')),
                ('TestTextQues', models.ManyToManyField(to='testmodule.TextQuestions', verbose_name='Text Question')),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identification', models.CharField(choices=[('STU', 'Student'), ('STA', 'Staff'), ('TEA', 'Teacher')], default='Teacher', max_length=20, verbose_name='Identification')),
                ('idcode', models.CharField(default='', max_length=20, verbose_name='ID Code')),
                ('TeacherBaseInfo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Teacher Name')),
            ],
        ),
        migrations.CreateModel(
            name='StudentAnswers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ChoiceQues', models.ManyToManyField(to='testmodule.ChoiceQues_StudentAnswer', verbose_name='Choice Question')),
                ('FillQues', models.ManyToManyField(to='testmodule.FillQues_StudentAnswer', verbose_name='Fill Question')),
                ('StudentID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='testmodule.student', verbose_name='Student')),
                ('Test', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='testmodule.testinfo', verbose_name='Test')),
                ('TextQues', models.ManyToManyField(to='testmodule.TextQues_StudentAnswer', verbose_name='Text Question')),
            ],
        ),
        migrations.CreateModel(
            name='Grades',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Grade', models.FloatField(verbose_name='Grade')),
                ('DoneState', models.CharField(choices=[('FINISHED', 'FINISHED'), ('UNFINISHED', 'UNFINISHED')], default='UNFINISHED', max_length=20, verbose_name='Done State')),
                ('GradeDate', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('Course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='testmodule.course', verbose_name='Course')),
                ('StudentID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='testmodule.student', verbose_name='Student')),
                ('Subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='testmodule.subject', verbose_name='Subject')),
                ('TestID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='testmodule.testinfo', verbose_name='Test ID')),
            ],
        ),
        migrations.AddField(
            model_name='fillques_studentanswer',
            name='FilleQues',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='testmodule.fillquestions', verbose_name='Fill Question'),
        ),
        migrations.AddField(
            model_name='fillques_studentanswer',
            name='TestID',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testmodule.testinfo', verbose_name='Test ID'),
        ),
        migrations.CreateModel(
            name='CourseTaken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TestTimeStart', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Start Time')),
                ('TestTimeEnd', models.DateTimeField(blank=True, default=None, null=True, verbose_name='End Time')),
                ('Crouse', models.ManyToManyField(to='testmodule.Course', verbose_name='Course Name')),
                ('Student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='testmodule.student', verbose_name='Student Name')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='CourseSubject',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='testmodule.subject', verbose_name='Course Subject'),
        ),
        migrations.CreateModel(
            name='Choices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ChoiceAnswerA', models.CharField(default='aaa', max_length=200, verbose_name='A')),
                ('ChoiceAnswerB', models.CharField(default='bbb', max_length=200, verbose_name='B')),
                ('ChoiceAnswerC', models.CharField(default='ccc', max_length=200, verbose_name='C')),
                ('ChoiceAnswerD', models.CharField(default='ddd', max_length=200, verbose_name='D')),
                ('ChoiceCorrect', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D')], default='', max_length=20, verbose_name='Single Choice True Answer')),
                ('ChoiceExplanation', models.TextField(default='Explanation is ...;', verbose_name='Choice Explanation')),
                ('ChoiceQues', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='testmodule.choicequestions', verbose_name='Choice Question')),
            ],
        ),
        migrations.AddField(
            model_name='choiceques_studentanswer',
            name='ChoiceQues',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='testmodule.choicequestions', verbose_name='Choice Question'),
        ),
        migrations.AddField(
            model_name='choiceques_studentanswer',
            name='TestID',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testmodule.testinfo', verbose_name='Test ID'),
        ),
    ]
